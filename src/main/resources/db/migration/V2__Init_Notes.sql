--create sequence notes.hibernate_sequence start 1 increment 1;

create schema notes

    create table notes.note
    (
        id            int8 generated by default as identity,
        create_date   timestamp with time zone,
        modify_date   timestamp with time zone,
        title         text,
        content       text,
        title_image   text,
        short_content text,
        constraint note_pk primary key (id)
    );
--функция
CREATE OR REPLACE FUNCTION notes.set_create_modify_date()
    RETURNS trigger
    LANGUAGE plpgsql
AS
$function$
declare
current_ts constant timestamp with time zone := now();
begin
    if (tg_op = 'INSERT')
    then
        new.create_date = coalesce(new.create_date, current_ts);
end if;
    new.modify_date = coalesce(new.modify_date, current_ts);
return new;
end;
$function$
;


--вызов в триггерах:
create trigger note_b_iu
    before
        insert
        or
update
    on
    notes.note
    for each row
    execute function notes.set_create_modify_date();
